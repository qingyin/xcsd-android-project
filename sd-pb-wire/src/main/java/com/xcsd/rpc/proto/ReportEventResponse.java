// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: src/main/resources/proto/Data.proto
package com.xcsd.rpc.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class ReportEventResponse extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RESULT = 0;
  public static final String DEFAULT_MSG = "";
  public static final Long DEFAULT_SERIALNO = 0L;
  public static final Long DEFAULT_SYSTIMESTAMP = 0L;

  /**
   * 1成功 2已处理 3失败
   */
  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public final Integer result;

  @ProtoField(tag = 2, type = STRING)
  public final String msg;

  /**
   * 返回客户端发送的批次号
   */
  @ProtoField(tag = 3, type = INT64)
  public final Long serialNo;

  /**
   * 服务器系统时间戳
   */
  @ProtoField(tag = 4, type = INT64)
  public final Long sysTimestamp;

  public ReportEventResponse(Integer result, String msg, Long serialNo, Long sysTimestamp) {
    this.result = result;
    this.msg = msg;
    this.serialNo = serialNo;
    this.sysTimestamp = sysTimestamp;
  }

  private ReportEventResponse(Builder builder) {
    this(builder.result, builder.msg, builder.serialNo, builder.sysTimestamp);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ReportEventResponse)) return false;
    ReportEventResponse o = (ReportEventResponse) other;
    return equals(result, o.result)
        && equals(msg, o.msg)
        && equals(serialNo, o.serialNo)
        && equals(sysTimestamp, o.sysTimestamp);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = this.result != null ? this.result.hashCode() : 0;
      result = result * 37 + (msg != null ? msg.hashCode() : 0);
      result = result * 37 + (serialNo != null ? serialNo.hashCode() : 0);
      result = result * 37 + (sysTimestamp != null ? sysTimestamp.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ReportEventResponse> {

    public Integer result;
    public String msg;
    public Long serialNo;
    public Long sysTimestamp;

    public Builder() {
    }

    public Builder(ReportEventResponse message) {
      super(message);
      if (message == null) return;
      this.result = message.result;
      this.msg = message.msg;
      this.serialNo = message.serialNo;
      this.sysTimestamp = message.sysTimestamp;
    }

    /**
     * 1成功 2已处理 3失败
     */
    public Builder result(Integer result) {
      this.result = result;
      return this;
    }

    public Builder msg(String msg) {
      this.msg = msg;
      return this;
    }

    /**
     * 返回客户端发送的批次号
     */
    public Builder serialNo(Long serialNo) {
      this.serialNo = serialNo;
      return this;
    }

    /**
     * 服务器系统时间戳
     */
    public Builder sysTimestamp(Long sysTimestamp) {
      this.sysTimestamp = sysTimestamp;
      return this;
    }

    @Override
    public ReportEventResponse build() {
      checkRequiredFields();
      return new ReportEventResponse(this);
    }
  }
}
