// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: src/main/resources/proto/Homework.proto
package com.xcsd.rpc.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 家长端接口 end
 * 教师端接口
 */
public final class ClassHomework extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_HOMEWORKID = 0L;
  public static final String DEFAULT_CLASSNAME = "";
  public static final String DEFAULT_TITLE = "";
  public static final HomeworkType DEFAULT_TYPE = HomeworkType.CUSTOMIZED;
  public static final Long DEFAULT_SENDTIME = 0L;
  public static final Integer DEFAULT_FINISHEDCOUNT = 0;
  public static final Integer DEFAULT_TOTALCOUNT = 0;

  @ProtoField(tag = 1, type = INT64, label = REQUIRED)
  public final Long homeworkId;

  /**
   * 班级名称
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public final String className;

  @ProtoField(tag = 3, type = STRING, label = REQUIRED)
  public final String title;

  /**
   * 1定制作业 2统一作业
   */
  @ProtoField(tag = 4, type = ENUM, label = REQUIRED)
  public final HomeworkType type;

  @ProtoField(tag = 5, type = INT64, label = REQUIRED)
  public final Long sendTime;

  /**
   * 完成作业的数量
   */
  @ProtoField(tag = 6, type = INT32)
  public final Integer finishedCount;

  /**
   * 总数量
   */
  @ProtoField(tag = 7, type = INT32)
  public final Integer totalCount;

  public ClassHomework(Long homeworkId, String className, String title, HomeworkType type, Long sendTime, Integer finishedCount, Integer totalCount) {
    this.homeworkId = homeworkId;
    this.className = className;
    this.title = title;
    this.type = type;
    this.sendTime = sendTime;
    this.finishedCount = finishedCount;
    this.totalCount = totalCount;
  }

  private ClassHomework(Builder builder) {
    this(builder.homeworkId, builder.className, builder.title, builder.type, builder.sendTime, builder.finishedCount, builder.totalCount);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ClassHomework)) return false;
    ClassHomework o = (ClassHomework) other;
    return equals(homeworkId, o.homeworkId)
        && equals(className, o.className)
        && equals(title, o.title)
        && equals(type, o.type)
        && equals(sendTime, o.sendTime)
        && equals(finishedCount, o.finishedCount)
        && equals(totalCount, o.totalCount);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = homeworkId != null ? homeworkId.hashCode() : 0;
      result = result * 37 + (className != null ? className.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (sendTime != null ? sendTime.hashCode() : 0);
      result = result * 37 + (finishedCount != null ? finishedCount.hashCode() : 0);
      result = result * 37 + (totalCount != null ? totalCount.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ClassHomework> {

    public Long homeworkId;
    public String className;
    public String title;
    public HomeworkType type;
    public Long sendTime;
    public Integer finishedCount;
    public Integer totalCount;

    public Builder() {
    }

    public Builder(ClassHomework message) {
      super(message);
      if (message == null) return;
      this.homeworkId = message.homeworkId;
      this.className = message.className;
      this.title = message.title;
      this.type = message.type;
      this.sendTime = message.sendTime;
      this.finishedCount = message.finishedCount;
      this.totalCount = message.totalCount;
    }

    public Builder homeworkId(Long homeworkId) {
      this.homeworkId = homeworkId;
      return this;
    }

    /**
     * 班级名称
     */
    public Builder className(String className) {
      this.className = className;
      return this;
    }

    public Builder title(String title) {
      this.title = title;
      return this;
    }

    /**
     * 1定制作业 2统一作业
     */
    public Builder type(HomeworkType type) {
      this.type = type;
      return this;
    }

    public Builder sendTime(Long sendTime) {
      this.sendTime = sendTime;
      return this;
    }

    /**
     * 完成作业的数量
     */
    public Builder finishedCount(Integer finishedCount) {
      this.finishedCount = finishedCount;
      return this;
    }

    /**
     * 总数量
     */
    public Builder totalCount(Integer totalCount) {
      this.totalCount = totalCount;
      return this;
    }

    @Override
    public ClassHomework build() {
      checkRequiredFields();
      return new ClassHomework(this);
    }
  }
}
