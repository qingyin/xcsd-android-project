// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: src/main/resources/proto/Homework.proto
package com.xcsd.rpc.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 布置统一作业
 * URL:/homework/send_unified
 */
public final class SendUnifiedHomeworkRequest extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_CLASSID = 0L;
  public static final List<GameLevel> DEFAULT_GAMELEVELS = Collections.emptyList();

  /**
   * 班级ID
   */
  @ProtoField(tag = 1, type = INT64, label = REQUIRED)
  public final Long classId;

  /**
   * 作业列表 只设置gameId和level
   */
  @ProtoField(tag = 2, label = REPEATED, messageType = GameLevel.class)
  public final List<GameLevel> gameLevels;

  public SendUnifiedHomeworkRequest(Long classId, List<GameLevel> gameLevels) {
    this.classId = classId;
    this.gameLevels = immutableCopyOf(gameLevels);
  }

  private SendUnifiedHomeworkRequest(Builder builder) {
    this(builder.classId, builder.gameLevels);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SendUnifiedHomeworkRequest)) return false;
    SendUnifiedHomeworkRequest o = (SendUnifiedHomeworkRequest) other;
    return equals(classId, o.classId)
        && equals(gameLevels, o.gameLevels);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = classId != null ? classId.hashCode() : 0;
      result = result * 37 + (gameLevels != null ? gameLevels.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SendUnifiedHomeworkRequest> {

    public Long classId;
    public List<GameLevel> gameLevels;

    public Builder() {
    }

    public Builder(SendUnifiedHomeworkRequest message) {
      super(message);
      if (message == null) return;
      this.classId = message.classId;
      this.gameLevels = copyOf(message.gameLevels);
    }

    /**
     * 班级ID
     */
    public Builder classId(Long classId) {
      this.classId = classId;
      return this;
    }

    /**
     * 作业列表 只设置gameId和level
     */
    public Builder gameLevels(List<GameLevel> gameLevels) {
      this.gameLevels = checkForNulls(gameLevels);
      return this;
    }

    @Override
    public SendUnifiedHomeworkRequest build() {
      checkRequiredFields();
      return new SendUnifiedHomeworkRequest(this);
    }
  }
}
