// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: src/main/resources/proto/LearningAbility.proto
package com.xcsd.rpc.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 原生新接口 学习能力对应的游戏统计
 * URL:/learning_ability/game_stat
 */
public final class AbilityScoreRequest extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_USERID = 0L;
  public static final Ability DEFAULT_ABILITY = Ability.Attention;

  @ProtoField(tag = 1, type = INT64, label = REQUIRED)
  public final Long userId;

  @ProtoField(tag = 2, type = ENUM, label = REQUIRED)
  public final Ability ability;

  public AbilityScoreRequest(Long userId, Ability ability) {
    this.userId = userId;
    this.ability = ability;
  }

  private AbilityScoreRequest(Builder builder) {
    this(builder.userId, builder.ability);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AbilityScoreRequest)) return false;
    AbilityScoreRequest o = (AbilityScoreRequest) other;
    return equals(userId, o.userId)
        && equals(ability, o.ability);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = userId != null ? userId.hashCode() : 0;
      result = result * 37 + (ability != null ? ability.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AbilityScoreRequest> {

    public Long userId;
    public Ability ability;

    public Builder() {
    }

    public Builder(AbilityScoreRequest message) {
      super(message);
      if (message == null) return;
      this.userId = message.userId;
      this.ability = message.ability;
    }

    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    public Builder ability(Ability ability) {
      this.ability = ability;
      return this;
    }

    @Override
    public AbilityScoreRequest build() {
      checkRequiredFields();
      return new AbilityScoreRequest(this);
    }
  }
}
