// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: src/main/resources/proto/Homework.proto
package com.xcsd.rpc.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 发送定制作业
 * URL:/homework/send
 */
public final class SendHomeworkRequest extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_CLASSID = 0L;
  public static final StudentScope DEFAULT_SCOPE = StudentScope.ALL;

  @ProtoField(tag = 1, type = INT64, label = REQUIRED)
  public final Long classId;

  @ProtoField(tag = 2, type = ENUM, label = REQUIRED)
  public final StudentScope scope;

  public SendHomeworkRequest(Long classId, StudentScope scope) {
    this.classId = classId;
    this.scope = scope;
  }

  private SendHomeworkRequest(Builder builder) {
    this(builder.classId, builder.scope);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SendHomeworkRequest)) return false;
    SendHomeworkRequest o = (SendHomeworkRequest) other;
    return equals(classId, o.classId)
        && equals(scope, o.scope);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = classId != null ? classId.hashCode() : 0;
      result = result * 37 + (scope != null ? scope.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SendHomeworkRequest> {

    public Long classId;
    public StudentScope scope;

    public Builder() {
    }

    public Builder(SendHomeworkRequest message) {
      super(message);
      if (message == null) return;
      this.classId = message.classId;
      this.scope = message.scope;
    }

    public Builder classId(Long classId) {
      this.classId = classId;
      return this;
    }

    public Builder scope(StudentScope scope) {
      this.scope = scope;
      return this;
    }

    @Override
    public SendHomeworkRequest build() {
      checkRequiredFields();
      return new SendHomeworkRequest(this);
    }
  }
}
