// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: src/main/resources/proto/LearningAbility.proto
package com.xcsd.rpc.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.DOUBLE;
import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class AbilityDetail extends Message {
  private static final long serialVersionUID = 0L;

  public static final Ability DEFAULT_ABILITY = Ability.Attention;
  public static final Integer DEFAULT_LEVEL = 0;
  public static final Integer DEFAULT_AVGLEVEL = 0;
  public static final Double DEFAULT_PERCENTAGE = 0D;
  public static final Integer DEFAULT_SCORE = 0;
  public static final Integer DEFAULT_MAXSCORE = 0;

  @ProtoField(tag = 1, type = ENUM, label = REQUIRED)
  public final Ability ability;

  /**
   * 能力等级
   */
  @ProtoField(tag = 2, type = INT32, label = REQUIRED)
  public final Integer level;

  /**
   * 用户平均能力等级
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer avgLevel;

  /**
   * 能力超过百分比
   */
  @ProtoField(tag = 4, type = DOUBLE)
  public final Double percentage;

  /**
   * 游戏学能得分
   */
  @ProtoField(tag = 5, type = INT32)
  public final Integer score;

  /**
   * 游戏学能满分
   */
  @ProtoField(tag = 6, type = INT32)
  public final Integer maxScore;

  public AbilityDetail(Ability ability, Integer level, Integer avgLevel, Double percentage, Integer score, Integer maxScore) {
    this.ability = ability;
    this.level = level;
    this.avgLevel = avgLevel;
    this.percentage = percentage;
    this.score = score;
    this.maxScore = maxScore;
  }

  private AbilityDetail(Builder builder) {
    this(builder.ability, builder.level, builder.avgLevel, builder.percentage, builder.score, builder.maxScore);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AbilityDetail)) return false;
    AbilityDetail o = (AbilityDetail) other;
    return equals(ability, o.ability)
        && equals(level, o.level)
        && equals(avgLevel, o.avgLevel)
        && equals(percentage, o.percentage)
        && equals(score, o.score)
        && equals(maxScore, o.maxScore);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = ability != null ? ability.hashCode() : 0;
      result = result * 37 + (level != null ? level.hashCode() : 0);
      result = result * 37 + (avgLevel != null ? avgLevel.hashCode() : 0);
      result = result * 37 + (percentage != null ? percentage.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (maxScore != null ? maxScore.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AbilityDetail> {

    public Ability ability;
    public Integer level;
    public Integer avgLevel;
    public Double percentage;
    public Integer score;
    public Integer maxScore;

    public Builder() {
    }

    public Builder(AbilityDetail message) {
      super(message);
      if (message == null) return;
      this.ability = message.ability;
      this.level = message.level;
      this.avgLevel = message.avgLevel;
      this.percentage = message.percentage;
      this.score = message.score;
      this.maxScore = message.maxScore;
    }

    public Builder ability(Ability ability) {
      this.ability = ability;
      return this;
    }

    /**
     * 能力等级
     */
    public Builder level(Integer level) {
      this.level = level;
      return this;
    }

    /**
     * 用户平均能力等级
     */
    public Builder avgLevel(Integer avgLevel) {
      this.avgLevel = avgLevel;
      return this;
    }

    /**
     * 能力超过百分比
     */
    public Builder percentage(Double percentage) {
      this.percentage = percentage;
      return this;
    }

    /**
     * 游戏学能得分
     */
    public Builder score(Integer score) {
      this.score = score;
      return this;
    }

    /**
     * 游戏学能满分
     */
    public Builder maxScore(Integer maxScore) {
      this.maxScore = maxScore;
      return this;
    }

    @Override
    public AbilityDetail build() {
      checkRequiredFields();
      return new AbilityDetail(this);
    }
  }
}
